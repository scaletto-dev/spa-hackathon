version: '3.9'

services:
  frontend:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile.frontend
      args:
        NODE_ENV: production
    image: spa-hackathon-frontend:latest
    container_name: spa-frontend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:3000}
      - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
      - VITE_GOOGLE_MAPS_API_KEY=${VITE_GOOGLE_MAPS_API_KEY}
      - VITE_GOOGLE_CLIENT_ID=${VITE_GOOGLE_CLIENT_ID}
      - VITE_APP_ENV=${VITE_APP_ENV:-production}
      - VITE_APP_VERSION=${VITE_APP_VERSION:-1.0.0}
    networks:
      - spa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    labels:
      - "com.spa-hackathon.service=frontend"
      - "com.spa-hackathon.version=1.0.0"

  # Backend service (optional - nếu bạn muốn chạy cả backend)
  # backend:
  #   build:
  #     context: ../..
  #     dockerfile: deploy/docker/Dockerfile.backend
  #   image: spa-hackathon-backend:latest
  #   container_name: spa-backend
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - NODE_ENV=production
  #     - DATABASE_URL=${DATABASE_URL}
  #   networks:
  #     - spa-network
  #   depends_on:
  #     - postgres

  # postgres:
  #   image: postgres:16-alpine
  #   container_name: spa-postgres
  #   restart: unless-stopped
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     - POSTGRES_DB=spa_db
  #     - POSTGRES_USER=spa_user
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   networks:
  #     - spa-network

networks:
  spa-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
